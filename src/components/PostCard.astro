---
import { Image } from 'astro:assets'
import FormattedDate from '@/components/FormattedDate'
import ArrowUp from '@/components/icons/ArrowUp'

const {
	id,
	data: { title, description, pubDate, heroImage, category },
	readTime,
	slug
} = Astro.props
---

<article class='flex gap-8 items-start min-h-full mb-8'>
	<a href={`/post/${slug}/`}>
		<div class='block w-[150px] h-[150px]'>
			<Image
				src={heroImage}
				width={150}
				height={150}
				format='webp'
				class='rounded-2xl hover:scale-[102%] transition-all duration-200'
				alt={`Imágen de ${title}`}
			/>
		</div>
	</a>
	<div class='flex flex-col gap-4 text-sm'>
		<a
			class='text-xl md:text-3xl font-bold underline decoration-1 hover:decoration-2 underline-offset-4 dark:text-gray-200 -tracking-wider'
			href={`/post/${slug}/`}
		>
			{title}
		</a>
		<p
			class='overflow-hidden line-clamp-4 text-gray-700 dark:text-gray-200 mb-5 md:text-lg font-[400] md:pr-[15%]'
		>
			{description}
		</p>
		<div class='flex items-center gap-4'>
			<div class='flex justify-between items-center'>
				<a
					href={`/post/${slug}/`}
					class='flex justify-center items-center dark:text-white rounded-full hover:translate-x-1 transition-transform duration-150 ease-in-out font-semibold gap-1 group'
					aria-label={`ir a ${title}`}
				>
					Leer <span
						class='mt-[1px] group-hover:rotate-45 transition-transform duration-250 ease-in-out'
						><ArrowUp width='18' height='18' /></span
					>
				</a>
			</div>
			<span class='text-cyan-500'>{category}</span>
			<FormattedDate date={pubDate} />
			<span
				class="text-sm relative sm:before:content-['●'] sm:before:text-[7px] sm:before:absolute sm:before:left-[-10px]"
			>
				{readTime}</span
			>
		</div>
	</div>
</article>

<script>
	import { animate } from 'motion'

	const images = document.querySelectorAll('img')

	document.addEventListener('DOMContentLoaded', function () {
		const showAnimations = localStorage.getItem('animations') === 'true'

		if (showAnimations) {
			animate(
				'.effect',
				{
					opacity: [0, 1],
					clipPath: ['circle(0% at 0% 0%)', 'circle(100% at 50% 50%)']
				},
				{ duration: 2, easing: 'ease' }
			)
		} else {
			images.forEach((img) => {
				img.classList.remove('opacity-0')
			})
		}
	})
</script>
